name: Check and Build Kustomize

on:
  push:
    branches:
      - main  # Adjust as per your branch needs
  pull_request:
    branches:
      - main

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Validate kustomization.yaml includes all resources
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          APPS_CLUSTERS_REGEX: '^apps/clusters/.*/'
          SECURE_CLUSTERS_REGEX: '^secure/.*/'
        run: |
          set +e
          FAILED=false

          # Loop through all changed files
          for file in ${ALL_CHANGED_FILES}; do
            # Skip kustomization.yaml files
            if [[ "$(basename "$file")" == "kustomization.yaml" ]]; then
              echo "Skipping $file"
              continue
            fi

            if [[ $file =~ $APPS_CLUSTERS_REGEX ]] || [[ $file =~ $SECURE_CLUSTERS_REGEX ]]; then
              directory=$(dirname "$file")
              if [[ $file == *.yaml ]]; then
                echo "Validating kustomization.yaml in $directory for resource $file"
          
                # Check if the file is listed in kustomization.yaml
                if ! grep -q "$(basename "$file")" "$directory/kustomization.yaml"; then
                  echo "Error: $file is not included in $directory/kustomization.yaml"
                  FAILED=true
                fi
              fi
            fi
          done

          if [ "$FAILED" = true ]; then
            echo "One or more resources are missing from kustomization.yaml"
            exit 1
          fi

      - name: Process changed files and run kustomize build
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          APPS_CLUSTERS_REGEX: '^apps/clusters/.*/'
          SECURE_CLUSTERS_REGEX: '^secure/.*/'
        run: |
          set +e
          FAILED=false
          
          for file in ${ALL_CHANGED_FILES}; do
            if [[ "$(basename "$file")" == "kustomization.yaml" ]]; then
              echo "Skipping $file"
              continue
            fi

            if [[ $file =~ $APPS_CLUSTERS_REGEX ]] || [[ $file =~ $SECURE_CLUSTERS_REGEX ]]; then
              echo "File '$file' was changed in monitored directories"
              directory=$(dirname "$file")
              echo "Running kustomize build in $directory"
              (cd "$directory" && kustomize build .) || FAILED=true
          
              if [ "$FAILED" = true ]; then
                echo "kustomize build failed in $directory"
              fi
          
            else
              echo "File '$file' does not match any known patterns."
            fi
          done
          
          if [ "$FAILED" = true ]; then
            echo "One or more kustomize builds failed."
            exit 1
          fi
