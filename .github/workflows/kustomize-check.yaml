name: Check and Build Kustomize

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Process changed files and validate kustomization.yaml
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          APPS_CLUSTERS_REGEX: '^apps/clusters/.*/'
          SECURE_CLUSTERS_REGEX: '^secure/.*/'
          ARGO_PROJECTS_REGEX: '^manifests/devops_infra/argocd-projects/.*/'
        run: |
          set +e
          FAILED=false

          for file in ${ALL_CHANGED_FILES}; do
            # Skip kustomization.yaml files themselves
            if [[ "$(basename "$file")" == "kustomization.yaml" ]]; then
              echo "Skipping $file"
              continue
            fi

            directory=$(dirname "$file")
            
            echo "########## Check for apps/clusters changes ##########"
            if [[ $file =~ $APPS_CLUSTERS_REGEX ]]; then
              echo "File '$file' was changed in apps/clusters/**/"

              # Check if the file is included in kustomization.yaml
              if ! grep -q "$(basename "$file")" "$directory/kustomization.yaml"; then
                echo "Error: $(basename "$file") is not included in $directory/kustomization.yaml."
                FAILED=true
              fi

              # Run kustomize build
              echo "Running kustomize build in $directory"
              (cd "$directory" && kustomize build .) || FAILED=true

              if [ "$FAILED" = true ]; then
                echo "kustomize build failed in $directory"
              fi

            echo " ########## Check for secure directory changes and validate namespace.yaml ########## "
            elif [[ $file =~ $SECURE_CLUSTERS_REGEX ]]; then
              echo "File '$file' was changed in secure/**/"

              # Validate namespace.yaml inclusion in kustomization.yaml
              if ! grep -q "namespace.yaml" "$directory/kustomization.yaml"; then
                echo "Error: namespace.yaml is not included in $directory/kustomization.yaml."
                FAILED=true
              fi

              # Run kustomize build
              echo "Running kustomize build in $directory"
              (cd "$directory" && kustomize build .) || FAILED=true

              if [ "$FAILED" = true ]; then
                echo "kustomize build failed in $directory"
              fi

            echo "######### Check for argo-projects directory changes ##########"
            elif [[ $file =~ $ARGO_PROJECTS_REGEX ]]; then
              echo "File '$file' was changed in manifests/devops_infra/argo-projects/base/**"

              # Check if the file is included in kustomization.yaml
              if ! grep -q "$(basename "$file")" "$directory/kustomization.yaml"; then
                echo "Error: $(basename "$file") is not included in $directory/kustomization.yaml."
                FAILED=true
              fi

              # Run kustomize build
              echo "Running kustomize build in $directory"
              (cd "$directory" && kustomize build .) || FAILED=true

              if [ "$FAILED" = true ]; then
                echo "kustomize build failed in $directory"
              fi

            else
              echo "File '$file' does not match any known patterns."
            fi
          done

          if [ "$FAILED" = true ]; then
            echo "One or more validation checks or kustomize builds failed."
            exit 1
          fi
